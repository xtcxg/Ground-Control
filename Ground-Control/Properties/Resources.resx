<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="base" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcAAAB/AAAATAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfwAAAP8AAADGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAP8AAAD/AAAAXQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAA/wAA
        AP8AAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAA/wAAAP8AAABVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAkAAAD/AAAA/wAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIcAAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAALkAAAD/AAAAygAAAIAAAACAAAAAgAAAAIAAAAB/AAAAfwAAAH8AAAB/AAAAtAAA
        AP8AAACqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAagAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAA/wAAAP8AAACkAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAbAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAA/wAAAO0AAAALAAAAIAAA
        AEAAAABAAAAAIAAAAAAAAACyAAAA/wAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH0AAAD/AAAA/wAA
        AFsAAAC/AAAA/wAAAP8AAAC/AAAAHwAAAP8AAAD/AAAAUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqAAAALgAA
        AP8AAAD/AAAApAAAAAAAAABAAAAAQAAAAAAAAABlAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbQAA
        AP8AAAA/AAAA3gAAAP8AAADtAAAAAAAAAAAAAAAAAAAAAAAAAMIAAAD/AAAAuwAAAH8AAADYAAAAOwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AJkAAAD/AAAAbQAAAAAAAACPAAAA/wAAAP8AAABBAAAAAAAAAAAAAAAYAAAA/wAAAP8AAABdAAAAKAAA
        AMkAAAD/AAAAZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB2AAAA/wAAAFUAAAAAAAAAAAAAAEAAAAD/AAAA/wAAAJ0AAAAAAAAAAAAAAG4AAAD/AAAA/wAA
        AAAAAAAAAAAADQAAAK4AAAD/AAAAVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAJwAAAOsAAACAAAAAAAAAAAAAAABAAAAAAAAAAPEAAAD/AAAA7QAAAAAAAAAAAAAA2QAA
        AP8AAADFAAAAAAAAACoAAAAAAAAAIAAAAN8AAADrAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACXAAAAvwAAAAAAAAAAAAAAfwAAAP8AAAB7AAAAogAAAP8AAAD/AAAAQAAA
        AEAAAAD/AAAA/wAAAGYAAACAAAAA/wAAAC8AAAAAAAAAYAAAAP8AAACXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAJgAAAPYAAABeAAAAAAAAADcAAAD/AAAAqgAAAAAAAABTAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAABAAAADPAAAAvwAAAAAAAAAAAAAAuQAAAPYAAAAmAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAA+QAAAAgAAAAAAAAAsAAAAPQAAAAgAAAAAAAA
        AKUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACfAAAAAAAAAFAAAAD/AAAAgAAAAAAAAABdAAAA/wAA
        AIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMcAAAC5AAAAAAAAAAQAAADvAAAArwAA
        AAAAAACHAAAA/wAAAP8AAAC/AAAAWwAAAFsAAADFAAAA/wAAAP8AAABgAAAAAAAAAK8AAACxAAAAAAAA
        AAAAAAD0AAAAxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wAAAJ8AAAAAAAAANQAA
        AP8AAACFAAAAAAAAANEAAAD/AAAAqgAAAAAAAAAAAAAAAAAAACAAAAD4AAAA/wAAAKYAAAAAAAAAhQAA
        AO8AAAAAAAAAAAAAAN4AAADfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5AAAAhgAA
        AAAAAABwAAAA/wAAAE4AAAAAAAAA9gAAAP8AAACAAAAAAAAAAAAAAAAAAAAAAAAAAJ8AAAD/AAAA7QAA
        AAAAAABOAAAA/wAAADAAAAAAAAAAxgAAAPkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AOwAAACAAAAAAAAAAFAAAAD/AAAAZgAAAAAAAADIAAAA/wAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAfwAA
        AP8AAADkAAAAAAAAAGYAAAD/AAAAFQAAAAAAAADXAAAA7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA0gAAAIAAAAAAAAAAHQAAAP8AAACTAAAAAAAAAIwAAAD/AAAA/wAAAFUAAAAAAAAAAAAA
        AFUAAAD/AAAA/wAAAMIAAAAAAAAAkwAAAM8AAAAAAAAAAAAAAPcAAADSAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACnAAAAtgAAAAAAAAAAAAAA0gAAALoAAAAAAAAAKgAAAPEAAAD/AAAA/wAA
        AJkAAACZAAAA/wAAAP8AAAD/AAAAWAAAAAAAAAC6AAAAmAAAAAAAAAA3AAAA/wAAAKcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMAAAD/AAAAJAAAAAAAAAByAAAA/wAAAGcAAAAAAAAAfwAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAIAAAAAAAAAAZwAAAP8AAABFAAAAAAAAAHMAAAD/AAAAUwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAAOUAAACGAAAAAAAAAAAAAAC5AAAA/wAA
        AFIAAAAAAAAAPAAAAJAAAACxAAAAsQAAAJAAAAA0AAAAAAAAAE4AAAD/AAAAjgAAAAAAAAAOAAAA1AAA
        AOUAAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfwAAAPgAAAAyAAAAAAAA
        AAAAAAD/AAAA/wAAALIAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAA/wAAALQAAAAAAAAAAAAA
        AH8AAAD/AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAAAA3QAA
        AL8AAAAAAAAAAAAAAAAAAACAAAAA/wAAAPMAAADFAAAAlwAAAJUAAAC/AAAA6gAAAP8AAABpAAAAAAAA
        AAAAAAAqAAAA/wAAAN0AAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABAAAAA/wAAAMwAAAAAAAAAAAAAAAAAAABbAAAAqgAAAOMAAAD/AAAA/wAAAOMAAACqAAAAWAAA
        AAAAAAAAAAAAMwAAAP8AAAD/AAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA1AAAA/wAAANQAAABHAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAkAAAAAAAA
        AAAAAAAAAAAAAAAAAGMAAAD/AAAA/wAAADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAzAAAAP8AAACcAAAAUAAAABAAAAAAAAAAAAAA
        AAAAAAAAAAAAIAAAAGAAAAC4AAAA/wAAAM4AAAAqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZgAAAMkAAAD/AAAA/wAA
        AOcAAADHAAAA1AAAAPEAAAD/AAAA/wAAAP8AAACFAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADMAAACAAAAAmQAAALIAAACyAAAAmQAAAIAAAABMAAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/x/5//8f8P//D/D//w/x//+AAf//gAH//4fj///AI///wAP//4JH//8D
        wP/+IYB//GGMP/jRih/5gAEf8RARj/EQCI/yIATP8iOEz/IjxE/yI8RP8iGEz/MgBI/xEAiP8YgRD/jD
        4x/44AYf/HAMP/4eeH//A8D//8AB///wB/8=
</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="sign" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\sign.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>